buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '2.5'
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.10'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.2.10'
}


import org.yaml.snakeyaml.Yaml

// these are added to the version code for abi-specific builds
// note the warpctl version code always ends with 0 so that a variant can be added
ext.abiVersionCodeVariants = [
        'x86_64': 1,
        'armeabi-v7a': 2,
        'arm64-v8a': 3,
]

def warpHomeDir = System.getenv('WARP_HOME') ?:
        file("${rootDir.absolutePath}/../..").absolutePath

def bringyourHomeDir = System.getenv('BRINGYOUR_HOME') ?:
        file("${rootDir.absolutePath}/../..").absolutePath

ext.signingSecret = { key ->
    def signingPropertiesFile = file("${warpHomeDir}/release/android/signing/app.properties")
    if (signingPropertiesFile.exists()) {
        Properties signingProperties = new Properties()
        signingProperties.load(signingPropertiesFile.newDataInputStream())
        signingProperties.getProperty(key)
    } else {
        println("WARNING: $key signing property does not exist, so released cannot be built (${signingPropertiesFile})")
        ''
    }
}

ext.warpctlPath = { ->
    def osName = ''
    def osArch = ''
    switch (System.getProperty('os.name')) {
        case 'Linux':
            osName = 'linux'
            break
        case 'Mac OS X':
            osName = 'darwin'
            break
    }
    switch (System.getProperty('os.arch')) {
        case 'x86_64':
            osArch = 'amd64'
            break
        case 'amd64':
            osArch = 'amd64'
            break
        case 'aarch64':
            osArch = 'arm64'
            break
    }

    "${bringyourHomeDir}/warp/warpctl/build/${osName}/${osArch}/warpctl"
}

ext.envSecret = { envName ->
    def servicesFile = file("$warpHomeDir/vault/$envName/services.yml")
    if (servicesFile.exists()) {
        def services = new Yaml().load(servicesFile.newInputStream())
        if (services.hidden_prefixes && 0 < services.hidden_prefixes.size()) {
            services.hidden_prefixes[0]
        } else {
            ''
        }
    } else {
        // services file doesn't exist
        println("WARNING: ${envName} services file doesn't exist, so the env secret won't be set (${servicesFile})")
        ''
    }
}

android {
    ext.appVersion = { ->
        def warpVersion = ''
        def localPropertiesFile = file("${rootDir.absolutePath}/local.properties")
        if (localPropertiesFile.exists()) {
            Properties localProperties = new Properties()
            localProperties.load(localPropertiesFile.newDataInputStream())
            warpVersion = localProperties.getProperty('warp.version')
        }

        if (warpVersion) {
            warpVersion
        } else {
            def b = new ProcessBuilder(
                    warpctlPath(),
                    'ls',
                    'version'
            )
            b.redirectErrorStream()
            def p = b.start()
            new String(p.inputStream.readAllBytes()).trim()
        }
    }
    ext.appVersionCode = { ->
        def warpVersionCode = ''
        def localPropertiesFile = file("${rootDir.absolutePath}/local.properties")
        if (localPropertiesFile.exists()) {
            Properties localProperties = new Properties()
            localProperties.load(localPropertiesFile.newDataInputStream())
            warpVersionCode = localProperties.getProperty('warp.version_code')
        }

        if (warpVersionCode) {
            warpVersionCode as Integer
        } else {
            def b = new ProcessBuilder(
                    warpctlPath(),
                    'ls',
                    'version-code'
            )
            b.redirectErrorStream()
            def p = b.start()
            new String(p.inputStream.readAllBytes()).trim() as Integer
        }
    }

    namespace 'com.bringyour.network'
    compileSdk 36
//    buildToolsVersion '35.0.1'
    ndkVersion '28.2.13676358'

    defaultConfig {
        applicationId "com.bringyour.network"
        // testing 7 has been particularly challenging because of device availability
        // 7.1 (25) works but 7.0 (24) has issues
        // moving the min to 8 (26) for now
        minSdk 26
        targetSdk 36
        versionCode appVersionCode()
        versionName appVersion()

        setProperty('archivesBaseName', "${applicationId}-${versionName}-${versionCode}")

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // see https://developer.android.com/build/shrink-code
        ndk {
            debugSymbolLevel 'SYMBOL_TABLE'
        }

    }

    signingConfigs {
        debug {
            storeFile file("${System.properties['user.home']}/.android/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }

        github {
            keyAlias 'github'
            keyPassword signingSecret('github.password')
            storeFile file("${warpHomeDir}/release/android/signing/app.jks")
            storePassword signingSecret('password')
        }

        play {
            keyAlias 'play'
            keyPassword signingSecret('play.password')
            storeFile file("${warpHomeDir}/release/android/signing/app.jks")
            storePassword signingSecret('password')
        }

        solana_dapp {
            keyAlias 'solana_dapp'
            keyPassword signingSecret('solana_dapp.password')
            storeFile file("${warpHomeDir}/release/android/signing/app.jks")
            storePassword signingSecret('password')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += 'version'

    // BuildConfig.FLAVOR
    productFlavors {
        github {
            isDefault true
            dimension = 'version'
            applicationId 'com.bringyour.network'
//            versionNameSuffix '-github'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            // the migratioon host name is used for services
            // TODO this will be removed once we fully migrate to ur.network
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", 'null'
            // hard coded initial extender networks
            // this can avoid the need for an initial doh query
            // json string array
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_SSO_GOOGLE", 'false'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"solana"'

            signingConfig signingConfigs.github

            // remove x86/amd64 builds from the github build since these are only needed for chromeos
            // https://developer.android.com/ndk/guides/abis
            ndk {
                //noinspection ChromeOsAbiSupport
                abiFilters = ['armeabi-v7a', 'arm64-v8a']
            }

            // remove opaque google metadata blocks
            // per https://gitlab.com/fdroid/fdroiddata/-/merge_requests/20797#note_2439129271
            dependenciesInfo {
                // Disables dependency metadata when building APKs.
                includeInApk = false
                // Disables dependency metadata when building Android App Bundles.
                includeInBundle = false
            }
        }
        play {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-play'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", '"play"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_SSO_GOOGLE", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"solana"'

            ndk {
                abiFilters = ['x86_64', 'armeabi-v7a', 'arm64-v8a']
            }

            signingConfig signingConfigs.play
        }
        solana_dapp {
            dimension = 'version'
            applicationId 'com.bringyour.network'
            versionNameSuffix '-solana_dapp'

            buildConfigField "String", "BRINGYOUR_BUNDLE_HOST_NAME", '"ur.network"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_NAME", '"main"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_ENV_SECRET", 'null'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_IPS", 'true'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_NET_EXPOSE_SERVER_HOST_NAMES", 'true'
            buildConfigField "String", "BRINGYOUR_BUNDLE_LINK_HOST_NAME", '"ur.io"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_MIGRATION_HOST_NAME", '"bringyour.com"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_STORE", '"solana_dapp"'
            buildConfigField "String", "BRINGYOUR_BUNDLE_WALLET", '"solana"'
            buildConfigField "String[]", "BRINGYOUR_BUNDLE_NET_EXTENDER_NETWORKS", 'new String[]{}'
            buildConfigField "boolean", "BRINGYOUR_BUNDLE_SSO_GOOGLE", 'true'

            signingConfig signingConfigs.solana_dapp

            // solana dapp devices are exclusively arm64-v8a
            ndk {
                //noinspection ChromeOsAbiSupport
                abiFilters = ['arm64-v8a']
            }

            // remove opaque google metadata blocks
            // per https://gitlab.com/fdroid/fdroiddata/-/merge_requests/20797#note_2439129271
            dependenciesInfo {
                // Disables dependency metadata when building APKs.
                includeInApk = false
                // Disables dependency metadata when building Android App Bundles.
                includeInBundle = false
            }
        }
    }

    sourceSets {
        github {
            java {
                srcDirs += ['src/ungoogle/java']
            }
        }
        play {
            java {
                srcDirs += ['src/google/java']
            }
        }
        solana_dapp {
            java {
                srcDirs += ['src/solana/java']
            }
        }
    }

    // build 1. APKs per architecture and 2. a fat APK with all architectures
    splits {
        abi {
            enable true
            reset()
            include 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    // see https://developer.android.com/reference/tools/gradle-api/7.4/com/android/build/api/dsl/BuildFeatures
    buildFeatures {
        viewBinding true
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.15"
    }

    tasks.register('buildSdk', Exec) {
        workingDir "${bringyourHomeDir}/sdk/build"
        commandLine 'make', 'init', 'build_android'
        environment 'WARP_VERSION', "${appVersion()}+${appVersionCode()}"
        environment 'ANDROID_NDK_HOME', android.ndkDirectory
    }

    tasks.register('goclientBuild') {
        dependsOn buildSdk
    }

//    tasks.withType(JavaCompile).tap {
//        configureEach {
//            compileTask -> compileTask.dependsOn buildSdk
//        }
//    }

    // adjust the version code for each abi
    // referenced from https://codeberg.org/iNPUTmice/Conversations/src/branch/master/build.gradle#L252-L261
    android.applicationVariants.configureEach { variant ->
        variant.outputs.each { output ->
            def abi = output.getFilter('ABI')
//            print("CONFIG ABI: $abi")
            def versionCodeVariant = project.ext.abiVersionCodeVariants[abi]
            if (versionCodeVariant != null) {
                output.versionCodeOverride = project.android.defaultConfig.versionCode + versionCodeVariant
            }
        }

    }
}

// local URnetwork SDK
dependencies {
    compileOnly fileTree(dir: "${bringyourHomeDir}/sdk/build/android", include: ['*-sources.jar'])
    implementation fileTree(dir: "${bringyourHomeDir}/sdk/build/android", include: ['*.aar', '*.jar'])
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'

    // serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0")

    // for QR Code generation
    implementation 'com.google.zxing:core:3.5.3'
    implementation 'androidx.biometric:biometric-ktx:1.4.0-alpha02'

    // hilt
    implementation 'com.google.dagger:hilt-android:2.57.1'
    kapt 'com.google.dagger:hilt-compiler:2.57.1'
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'
}

// compose
dependencies {
    implementation 'androidx.core:core-ktx:1.17.0'

    // jetpack compose
    def composeBom = platform('androidx.compose:compose-bom:2025.08.01')
    implementation composeBom
    androidTestImplementation composeBom

    implementation("androidx.navigation:navigation-compose:2.9.3")

    // Material Design 3
    implementation 'androidx.compose.material3:material3:1.3.2'
    implementation 'androidx.compose.material3:material3-adaptive-navigation-suite-android:1.3.2'
    implementation 'androidx.compose.material3:material3-window-size-class-android:1.3.2'
    implementation "androidx.compose.material:material-icons-extended:1.7.8"

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.9.0'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.9.0'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview:1.9.0'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.9.0'

    // reflect
    implementation 'org.jetbrains.kotlin:kotlin-reflect:2.2.0'
}


// solana saga
dependencies {
    implementation("com.solanamobile:mobile-wallet-adapter-clientlib-ktx:2.1.0")
    implementation("com.solanamobile:web3-solana:0.2.5")
    implementation("com.solanamobile:rpc-core:0.2.9")
    implementation("io.github.funkatronics:multimult:0.2.4")
    implementation("io.github.funkatronics:kborsh:0.1.1")
}

// google play
dependencies {
    // force dependencies with known CVE vulnerabilities to newer versions
    // CVE-2022-2390
    // CVE-2022-2390
    // CVE-2022-2390
/*ungoogled*/
/*ungoogled*/
/*ungoogled*/
/*ungoogled*/

/*ungoogled*/
/*ungoogled*/

    // play store review
/*ungoogled*/
/*ungoogled*/

    // see https://developer.android.com/google/play/billing/integrate#groovy
/*ungoogled*/
/*ungoogled*/
}

// google play
dependencies {
    // force dependencies with known CVE vulnerabilities to newer versions
    // CVE-2022-2390
    // CVE-2022-2390
    // CVE-2022-2390
/*ungoogled*/
/*ungoogled*/
/*ungoogled*/
/*ungoogled*/

/*ungoogled*/
/*ungoogled*/

    // play store review
/*ungoogled*/
/*ungoogled*/

    // see https://developer.android.com/google/play/billing/integrate#groovy
/*ungoogled*/
/*ungoogled*/
}



// Allow references to generated code
kapt {
    correctErrorTypes = true
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//hilt {
//    enableAggregatingTask = false
//}
